const readline = require('readline');
const { compress } = require('./compress');
const { uncompress } = require('./uncompress');
const { help } = require('./help');

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

let cherryMode = false;

const output = (message) => {
    console.log(cherryMode ? `üçí ${message}` : message);
};

const mainMenu = () => {
  rl.question('\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É (compress, uncompress, help, end): ', (command) => {
    switch (command.trim()) {
      case 'compress':
        compress(output, rl, mainMenu);
        break;
      case 'uncompress':
        uncompress(output, rl, mainMenu);
        break;
      case 'help':
        help(output);
        mainMenu();
        break;
      case 'cherry':
        cherryMode = !cherryMode;
        output('–†–µ–∂–∏–º cherry ' + (cherryMode ? '–≤–∫–ª—é—á–µ–Ω' : '–≤—ã–∫–ª—é—á–µ–Ω'));
        mainMenu();
        break;
      case 'end':
        rl.close();
        break;
      default:
        output('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        mainMenu();
        break;
    }
  });
};

mainMenu();
