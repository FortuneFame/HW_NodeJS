const fs = require('fs');
const { Writable } = require('stream');

class LimitedFileWriter extends Writable {
    constructor(filename, maxSize) {
        super();
        this.filename = filename;
        this.maxSize = maxSize;
        this.currentSize = 0;
        this.fileStream = fs.createWriteStream(this.filename); // –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞
    };

    _write(chunk, encoding, callback) {
        this.currentSize += chunk.length; // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä –∑–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if (this.currentSize > this.maxSize) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏ –ª–∏–º–∏—Ç
            this.fileStream.close(() => {
                fs.unlink(this.filename, err => { // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –µ—Å–ª–∏ –æ–Ω –ø—Ä–µ–≤—ã—Å–∏–ª –ª–∏–º–∏—Ç
                    this.destroy(); // –£–Ω–∏—á—Ç–æ–∂–∞–µ–º –ø–æ—Ç–æ–∫ 
                    this.emit('error', new Error('–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä ‚õîÔ∏è'))
                });
            });
            return;
        };
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
        this.fileStream.write(chunk, encoding, callback) 
    };
    // –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –ø–æ—Ç–æ–∫–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
    _destroy(err, callback) { 
        this.fileStream.close(() => callback(err));
    };
};

const dataToRead = [
  "Text line 1",
  "Text line 2",
  "Text line 3"
];

const writing = new LimitedFileWriter('test.txt', 50)

writing.on('error', err => {
    console.error('‚ö†Ô∏è  –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', err);
});

dataToRead.forEach(data => {
    writing.write(data + '\n');
});

writing.on('finish', () => {
    console.log('ü§ñ –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
})

writing.end();

// npm run task2
// node writable.js
